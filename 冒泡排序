#include <stdio.h>
void bubble_sort(int arr[], int sz)冒泡排序函数
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)确认冒泡排序躺数
	{
		int j = 0;
	int flag = 1;创造一个判断所给数组是否需要排序的变量
		for (j = 0; j <sz-i-1 ; j++)
		{
			if (arr[j] > arr[j + 1])比较相邻两位元素大小并进行升序排序 
			{
				int tmp = arr[j];  数值交换
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
				int flag = 0;进行过排序，修改flag的数组，说明数组不完全有序
			}
		}
	if (flag == 1) flag等于1说明没有进行排序，说明改数组已经有序，跳出这趟趟趟！！！循环。
		(
			break;
		)
	}
		
}
int main()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);计算元素个数，最好在主函数中算，数组传参只会传数组首元素地址 相当于&arr[0]
	bubble_sort(arr, sz);
	for (i = 0; i < sz; i++)
	{
		printf(" %d ", arr[i]);打印排序后的数组中的所有元素
	}
	return 0;
}
#include <stdio.h>
int main()
{
	printf("%p\n", arr);
	printf("%p\n", arr + 1);
	printf("%p\n", &arr[0]);
	printf("%p\n", &arr[0] + 1);
	printf("%p\n", &arr);
	printf("%p\n", % arr + 1);
	return 0;
}
sizeof(数组名)-数组名表示整个数组的大小，单位是字节
&数组名-数组名表示整个数组，&数组名，取出的整个数组的地址
其他时候数组名表示数组首元素地址
